// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Application test it should render 404 PAGE without crashing 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <NotFoundPage>
      <div
        className="flex items-center justify-center flex-col h-screen"
      >
        <img
          alt="404 Page"
          className="sm:w-2/4 md:w-1/5"
          src={
            Object {
              "process": [Function],
            }
          }
        />
        <h2
          className="text-secondary my-6 md:w-2/5 text-center text-sm font-semibold"
        >
          THE PAGE YOU ARE LOOKING FOR MIGHT HAVE BEEN REMOVED, HAD ITS NAME CHANGED OR ITS TEMPORARILY UNAVAILABLE
        </h2>
        <Link
          className="btn text-white bg-primary py-3 px-10 font-medium rounded"
          title="Signup"
          to="/"
        >
          <a
            className="btn text-white bg-primary py-3 px-10 font-medium rounded"
            href="/"
            onClick={[Function]}
            title="Signup"
          >
            GO HOME
          </a>
        </Link>
      </div>
    </NotFoundPage>
  </Router>
</BrowserRouter>
`;

exports[`Application test it should render Home Page without crashing 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Homepage>
        <Layout>
          <Connect(NavBar)>
            <NavBar
              dispatch={[Function]}
              isLoggedIn={false}
              user={Object {}}
            >
              <nav
                className="wrapper flex flex-row items-center justify-between pt-2 pb-2 md:pl-10 md:pr-10 sm:pl-4 sm:pr-4"
              >
                <div
                  className="logo flex items-center"
                >
                  <Link
                    aria-labelledby="Error Swag Logo"
                    className="flex items-center"
                    to="/"
                  >
                    <a
                      aria-labelledby="Error Swag Logo"
                      className="flex items-center"
                      href="/"
                      onClick={[Function]}
                    >
                      <img
                        alt="Errorswag logo"
                        className="sm:w-8/12 md:w-full"
                        src={
                          Object {
                            "process": [Function],
                          }
                        }
                      />
                    </a>
                  </Link>
                </div>
                <div
                  className="flex"
                >
                  <Link
                    aria-labelledby="Search"
                    className="small-button"
                    to="/search"
                  >
                    <a
                      aria-labelledby="Search"
                      className="small-button"
                      href="/search"
                      onClick={[Function]}
                    >
                      <icon-mock
                        className="h-5 w-5"
                      />
                    </a>
                  </Link>
                  <Link
                    aria-labelledby="Notifications"
                    className="small-button"
                    to="/notifications"
                  >
                    <a
                      aria-labelledby="Notifications"
                      className="small-button"
                      href="/notifications"
                      onClick={[Function]}
                    >
                      <icon-mock
                        className="h-6 w-6"
                      />
                    </a>
                  </Link>
                  <AuthButtons
                    id="auth-buttons"
                    show={true}
                  >
                    <Link
                      aria-labelledby="Login"
                      className="btn btn-medium py-3 px-2 text-primary sm:hidden md:block mr-6"
                      to="/login"
                    >
                      <a
                        aria-labelledby="Login"
                        className="btn btn-medium py-3 px-2 text-primary sm:hidden md:block mr-6"
                        href="/login"
                        onClick={[Function]}
                      >
                        LOGIN
                      </a>
                    </Link>
                    <Link
                      aria-labelledby="Signup"
                      className="btn red-button py-3 px-8 sm:hidden md:block"
                      to="/signup"
                    >
                      <a
                        aria-labelledby="Signup"
                        className="btn red-button py-3 px-8 sm:hidden md:block"
                        href="/signup"
                        onClick={[Function]}
                      >
                        GET STARTED
                      </a>
                    </Link>
                  </AuthButtons>
                  <MenuIcon
                    id="menu"
                    isLoggedIn={false}
                    menuOpen={false}
                    toggleMenu={[Function]}
                  >
                    <button
                      aria-expanded={false}
                      aria-label="Menu"
                      className="hamburger small-button sm:block md:hidden"
                      data-active={false}
                      id="hamburger"
                      onClick={[Function]}
                      type="button"
                    >
                      <span />
                    </button>
                  </MenuIcon>
                </div>
              </nav>
            </NavBar>
          </Connect(NavBar)>
          <div
            className="m-20 text-center"
          >
            <h1
              className="text-green-800"
            >
              Welcome to ErrorSwag, what on your mind?
            </h1>
            <img
              alt="errorswag logo"
              src={
                Object {
                  "process": [Function],
                }
              }
            />
            <Link
              to="/login"
            >
              <a
                href="/login"
                onClick={[Function]}
              >
                <button
                  className="bg-green-300 text-white p-2 hover:bg-green-700 border hover:border-red-300"
                  type="button"
                >
                  Login
                </button>
              </a>
            </Link>
          </div>
          <Footer>
            <footer
              className="footer flex flex-wrap w-full justify-center px-10"
            >
              <div
                className="md:w-1/2 h-8"
              >
                <p
                  className=" flex justify-start"
                >
                  Designed by Kifaru Team
                </p>
              </div>
              <div
                className="md:w-1/2 h-8"
              >
                <ul
                  className="flex justify-end items-center"
                >
                  <li
                    className="mx-1 px-2 py-1 cursor-pointer"
                  >
                    <icon-mock />
                  </li>
                  <li
                    className="mx-1 px-4 py-1 cursor-pointer"
                  >
                    <icon-mock />
                  </li>
                  <li
                    className="mx-1 px-4 py-1 cursor-pointer"
                  >
                    <icon-mock />
                  </li>
                  <li
                    className="mx-1 px-4 py-1 cursor-pointer"
                  >
                    <icon-mock />
                  </li>
                  <li
                    className="mx-1 px-4 py-1 cursor-pointer"
                  >
                    <icon-mock />
                  </li>
                </ul>
              </div>
            </footer>
          </Footer>
        </Layout>
      </Homepage>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Application test should not crash app 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <App>
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            exact={true}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            path="/"
          >
            <Homepage
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <Layout>
                <Connect(NavBar)>
                  <NavBar
                    dispatch={[Function]}
                    isLoggedIn={false}
                    user={Object {}}
                  >
                    <nav
                      className="wrapper flex flex-row items-center justify-between pt-2 pb-2 md:pl-10 md:pr-10 sm:pl-4 sm:pr-4"
                    >
                      <div
                        className="logo flex items-center"
                      >
                        <Link
                          aria-labelledby="Error Swag Logo"
                          className="flex items-center"
                          to="/"
                        >
                          <a
                            aria-labelledby="Error Swag Logo"
                            className="flex items-center"
                            href="/"
                            onClick={[Function]}
                          >
                            <img
                              alt="Errorswag logo"
                              className="sm:w-8/12 md:w-full"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                          </a>
                        </Link>
                      </div>
                      <div
                        className="flex"
                      >
                        <Link
                          aria-labelledby="Search"
                          className="small-button"
                          to="/search"
                        >
                          <a
                            aria-labelledby="Search"
                            className="small-button"
                            href="/search"
                            onClick={[Function]}
                          >
                            <icon-mock
                              className="h-5 w-5"
                            />
                          </a>
                        </Link>
                        <Link
                          aria-labelledby="Notifications"
                          className="small-button"
                          to="/notifications"
                        >
                          <a
                            aria-labelledby="Notifications"
                            className="small-button"
                            href="/notifications"
                            onClick={[Function]}
                          >
                            <icon-mock
                              className="h-6 w-6"
                            />
                          </a>
                        </Link>
                        <AuthButtons
                          id="auth-buttons"
                          show={true}
                        >
                          <Link
                            aria-labelledby="Login"
                            className="btn btn-medium py-3 px-2 text-primary sm:hidden md:block mr-6"
                            to="/login"
                          >
                            <a
                              aria-labelledby="Login"
                              className="btn btn-medium py-3 px-2 text-primary sm:hidden md:block mr-6"
                              href="/login"
                              onClick={[Function]}
                            >
                              LOGIN
                            </a>
                          </Link>
                          <Link
                            aria-labelledby="Signup"
                            className="btn red-button py-3 px-8 sm:hidden md:block"
                            to="/signup"
                          >
                            <a
                              aria-labelledby="Signup"
                              className="btn red-button py-3 px-8 sm:hidden md:block"
                              href="/signup"
                              onClick={[Function]}
                            >
                              GET STARTED
                            </a>
                          </Link>
                        </AuthButtons>
                        <MenuIcon
                          id="menu"
                          isLoggedIn={false}
                          menuOpen={false}
                          toggleMenu={[Function]}
                        >
                          <button
                            aria-expanded={false}
                            aria-label="Menu"
                            className="hamburger small-button sm:block md:hidden"
                            data-active={false}
                            id="hamburger"
                            onClick={[Function]}
                            type="button"
                          >
                            <span />
                          </button>
                        </MenuIcon>
                      </div>
                    </nav>
                  </NavBar>
                </Connect(NavBar)>
                <div
                  className="m-20 text-center"
                >
                  <h1
                    className="text-green-800"
                  >
                    Welcome to ErrorSwag, what on your mind?
                  </h1>
                  <img
                    alt="errorswag logo"
                    src={
                      Object {
                        "process": [Function],
                      }
                    }
                  />
                  <Link
                    to="/login"
                  >
                    <a
                      href="/login"
                      onClick={[Function]}
                    >
                      <button
                        className="bg-green-300 text-white p-2 hover:bg-green-700 border hover:border-red-300"
                        type="button"
                      >
                        Login
                      </button>
                    </a>
                  </Link>
                </div>
                <Footer>
                  <footer
                    className="footer flex flex-wrap w-full justify-center px-10"
                  >
                    <div
                      className="md:w-1/2 h-8"
                    >
                      <p
                        className=" flex justify-start"
                      >
                        Designed by Kifaru Team
                      </p>
                    </div>
                    <div
                      className="md:w-1/2 h-8"
                    >
                      <ul
                        className="flex justify-end items-center"
                      >
                        <li
                          className="mx-1 px-2 py-1 cursor-pointer"
                        >
                          <icon-mock />
                        </li>
                        <li
                          className="mx-1 px-4 py-1 cursor-pointer"
                        >
                          <icon-mock />
                        </li>
                        <li
                          className="mx-1 px-4 py-1 cursor-pointer"
                        >
                          <icon-mock />
                        </li>
                        <li
                          className="mx-1 px-4 py-1 cursor-pointer"
                        >
                          <icon-mock />
                        </li>
                        <li
                          className="mx-1 px-4 py-1 cursor-pointer"
                        >
                          <icon-mock />
                        </li>
                      </ul>
                    </div>
                  </footer>
                </Footer>
              </Layout>
            </Homepage>
          </Route>
        </Switch>
      </Router>
    </BrowserRouter>
  </App>
</Provider>
`;

exports[`Application test should render without crashing 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Menu>
      <ul
        className="absolute right-0 top-0 mt-14 p-5  shadow-lg bg-white z-10 block text-left w-100 menu"
      >
        <li
          className="p-3 whitespace-no-wrap text-sm md:text-base text-black-600 hover:text-gray-800 hover:bg-gray-100"
        >
          <Link
            className="px-2 py-1"
            to="/"
          >
            <a
              className="px-2 py-1"
              href="/"
              onClick={[Function]}
            >
              <span>
                Create Article
              </span>
            </a>
          </Link>
        </li>
        <li
          className="p-3 whitespace-no-wrap text-sm md:text-base text-black hover:text-gray-800 hover:bg-gray-100"
        >
          <Link
            className="px-2 py-1"
            to="/"
          >
            <a
              className="px-2 py-1"
              href="/"
              onClick={[Function]}
            >
              <span>
                My Profile
              </span>
            </a>
          </Link>
        </li>
        <li
          className="p-3 whitespace-no-wrap text-sm md:text-base text-black hover:text-gray-800 hover:bg-gray-100"
        >
          <Link
            className="px-2 py-1"
            to="/"
          >
            <a
              className="px-2 py-1"
              href="/"
              onClick={[Function]}
            >
              <span>
                Admin Management
              </span>
            </a>
          </Link>
        </li>
        <li
          className="p-3 whitespace-no-wrap text-sm md:text-base text-black  hover:text-gray-800 hover:bg-gray-100"
        >
          <Link
            className="px-2 py-1"
            to="/"
          >
            <a
              className="px-2 py-1"
              href="/"
              onClick={[Function]}
            >
              <span>
                Logout
              </span>
            </a>
          </Link>
        </li>
      </ul>
    </Menu>
  </Router>
</BrowserRouter>
`;

exports[`Application test should renders without crashing 1`] = `
<cards>
  <div
    className="flex justify-center w-full md:hidden "
  >
    <div
      className="max-w-sm flex items-center h-screen overflow-hidden w-full"
    >
      <div
        className="flex justify-center items-center h-screen flex-col w-full"
      >
        <div
          className="flex flex-col items-center"
        >
          <a
            className="bg-teal-500  text-white text-center text-xs w-32  uppercase  py-3 px-5 "
            href="/login"
          >
            LOGIN
          </a>
          <a
            className="bg-white-500 mt-6  text-center border border-red-500  w-32 text-xs py-3 px-1 uppercase text-red-600"
            href="/signup"
          >
            get started
          </a>
        </div>
      </div>
    </div>
  </div>
</cards>
`;

exports[`Application test should work fine on Login Page 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <LoginPage
        authAction={[MockFunction]}
        error={null}
        history={
          Object {
            "push": [MockFunction],
          }
        }
        isAuthenticated={false}
        location={
          Object {
            "url": "/articles",
          }
        }
        status=""
      >
        <LoginCard>
          <div
            className="flex justify-center h-screen align-middle"
          >
            <div
              className="flex items-center sm:w-full md:w-10/12 lg:w-6/12 md:m-40"
            >
              <div
                className="flex md:h-full sm:h-full"
              >
                <div
                  className="md:flex auth-bg sm:w-1/2 overflow-hidden w-full hidden rounded-l"
                >
                  <h1
                    className="flex px-5 items-center text-left text-white text-2xl font-bold"
                  >
                    Welcome back, 
                    <br />
                     Sign in to share, recommend and bookmark.
                  </h1>
                </div>
                <Connect(LoginForm)
                  authAction={[MockFunction]}
                  error={null}
                  history={
                    Object {
                      "push": [MockFunction],
                    }
                  }
                  isAuthenticated={false}
                  location={
                    Object {
                      "url": "/articles",
                    }
                  }
                  status=""
                >
                  <LoginForm
                    authAction={[Function]}
                    history={
                      Object {
                        "push": [MockFunction],
                      }
                    }
                    isAuthenticated={false}
                    location={
                      Object {
                        "url": "/articles",
                      }
                    }
                    status="rest"
                  >
                    <div
                      className="md:w-1/2 w-full px-2 rounded-r bg-white h-full"
                    >
                      <form
                        className="flex-4 px-5"
                        onSubmit={[Function]}
                      >
                        <div>
                          <img
                            alt="errorswag logo"
                            className="login-form-logo pt-10 pb-3 mx-auto"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                        </div>
                        <label
                          className="block text-gray-700 text-sm font-bold"
                          htmlFor="email"
                        >
                          Email
                          <input
                            className="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Email Address"
                            type="email"
                          />
                        </label>
                        <label
                          className="block text-gray-700 text-sm font-bold"
                          htmlFor="password"
                        >
                          Password
                          <input
                            className="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                            id="password"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                          />
                        </label>
                        <input
                          className="login-btn hover:bg-teal-400 cursor-pointer text-white appearance-none block w-full border rounded py-3 px-4 mb-1 leading-tight focus:outline-none focus:bg-red focus:text-green"
                          disabled={false}
                          type="submit"
                          value="Login"
                        />
                      </form>
                      <div
                        className="flex flex-col text-sm text-center justify-between items-center w-full pt-3 pb-5"
                      >
                        <Link
                          to="/forgot-password"
                        >
                          <a
                            href="/forgot-password"
                            onClick={[Function]}
                          >
                            <p
                              className="text-color mb-2"
                            >
                              Forgot Password
                            </p>
                          </a>
                        </Link>
                        <Link
                          to="/signup"
                        >
                          <a
                            href="/signup"
                            onClick={[Function]}
                          >
                            <p>
                              Don't have Account?
                              <span
                                className="text-color"
                              >
                                 Sign up
                              </span>
                            </p>
                          </a>
                        </Link>
                      </div>
                      <Connect(SocialMediaLogin)
                        location={
                          Location {
                            "assign": [Function],
                            "hash": "",
                            "host": "localhost",
                            "hostname": "localhost",
                            "href": "http://localhost/",
                            "origin": "http://localhost",
                            "pathname": "/",
                            "port": "",
                            "protocol": "http:",
                            "reload": [Function],
                            "replace": [Function],
                            "search": "",
                            "toString": [Function],
                          }
                        }
                      >
                        <SocialMediaLogin
                          isAuthenticated={false}
                          location={
                            Location {
                              "assign": [Function],
                              "hash": "",
                              "host": "localhost",
                              "hostname": "localhost",
                              "href": "http://localhost/",
                              "origin": "http://localhost",
                              "pathname": "/",
                              "port": "",
                              "protocol": "http:",
                              "reload": [Function],
                              "replace": [Function],
                              "search": "",
                              "toString": [Function],
                            }
                          }
                          socialLogin={[Function]}
                        >
                          <SocialMedia>
                            <div
                              className="flex flex-col justify-center items-center"
                            >
                              <a
                                className="mb-2"
                                href="undefined/auth/github"
                              >
                                <icon-mock />
                              </a>
                              <a
                                className="mb-2"
                                href="undefined/auth/facebook"
                              >
                                <icon-mock />
                              </a>
                              <a
                                className="mb-2"
                                href="undefined/auth/google"
                              >
                                <icon-mock />
                              </a>
                            </div>
                          </SocialMedia>
                        </SocialMediaLogin>
                      </Connect(SocialMediaLogin)>
                      <br />
                      <div
                        className="sweet-loading"
                      >
                        <Loader
                          color="#f00"
                          css={
                            Object {
                              "map": undefined,
                              "name": "wql5vo",
                              "next": undefined,
                              "styles": "
      display: block;
      margin: 0 auto;
      border-color: red;
    ",
                            }
                          }
                          loading={false}
                          size={50}
                          sizeUnit="px"
                        />
                      </div>
                    </div>
                  </LoginForm>
                </Connect(LoginForm)>
              </div>
            </div>
          </div>
        </LoginCard>
      </LoginPage>
    </Router>
  </BrowserRouter>
</Provider>
`;
